{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\rayna\\\\code\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\rayna\\\\code\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\rayna\\\\code\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\rayna\\\\code\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\rayna\\\\code\\\\Clicky-Game\\\\clicky-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\rayna\\\\code\\\\Clicky-Game\\\\clicky-game\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport cats from \"./cards.json\";\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cats: cats,\n      clickedCatIds: [],\n      score: 0,\n      goal: 8,\n      status: \"\"\n    };\n\n    _this.shuffleScoreCard = function (id) {\n      var clickedCatIds = _this.state.clickedCatIds;\n\n      if (clickedCatIds.includes(id)) {\n        _this.setState({\n          clickedCatIds: [],\n          score: 0,\n          status: \"Game Over! You lost. Click to play again!\"\n        });\n\n        return;\n      } else {\n        clickedCatIds.push(id);\n\n        if (clickedCatIds.length === 8) {\n          _this.setState({\n            score: 8,\n            status: \"You Won! Great Job! Click to play again!\",\n            clickedCatIds: []\n          });\n\n          console.log('You Win');\n          return;\n        }\n\n        _this.setState({\n          cats: cats,\n          clickedCatIds: clickedCatIds,\n          score: clickedCatIds.length,\n          status: \" \"\n        });\n\n        for (var i = cats.length - 1; i > 0; i--) {\n          var j = Math.floor(Math.random() * (i + 1));\n          var _ref = [cats[j], cats[i]];\n          cats[i] = _ref[0];\n          cats[j] = _ref[1];\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // Map over this.state.cards and render a Card component for each card object\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"App-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Clicky Cats\"), React.createElement(\"p\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Try not to click the same image twice! Click all the images ONLY once and you win!\")), React.createElement(Score, {\n        total: this.state.score,\n        goal: 8,\n        status: this.state.status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.cats.map(function (kitty) {\n        return React.createElement(Card, {\n          shuffleScoreCard: _this2.shuffleScoreCard,\n          id: kitty.id,\n          key: kitty.id,\n          image: kitty.image,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      })), React.createElement(\"footer\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" \\xA9 Rayna McGinnis |\", React.createElement(\"a\", {\n        href: \"https://raynamcginnis.github.io/Clicky-Game/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \" View on Github\"), \".\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\rayna\\code\\Clicky-Game\\clicky-game\\src\\App.js"],"names":["React","Component","Card","Wrapper","Score","cats","App","state","clickedCatIds","score","goal","status","shuffleScoreCard","id","includes","setState","push","length","console","log","i","j","Math","floor","random","map","kitty","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport cats from \"./cards.json\";\nimport './App.css';\n\nclass App extends Component {\n  // Setting this.state.cats to the cards json array\n  state = {\n    cats,\n    clickedCatIds: [],\n    score: 0,\n    goal: 8,\n    status: \"\"\n  };\n\n  //shuffle the pup cards in the browser when clicked\n  shuffleScoreCard = id => {\n    let clickedCatIds = this.state.clickedCatIds;\n\n    if(clickedCatIds.includes(id)){\n      this.setState({ clickedCatIds: [], score: 0, status:  \"Game Over! You lost. Click to play again!\" });\n      return;\n    }else{\n      clickedCatIds.push(id)\n\n      if(clickedCatIds.length === 8){\n        this.setState({score: 8, status: \"You Won! Great Job! Click to play again!\", clickedCatIds: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ cats, clickedCatIds, score: clickedCatIds.length, status: \" \" });\n\n      for (let i = cats.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [cats[i], cats[j]] = [cats[j], cats[i]];\n      }\n    }\n  }\n\n  // Map over this.state.cards and render a Card component for each card object\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Clicky Cats</h1>\n          <p className=\"App-intro\">\n            Try not to click the same image twice! Click all the images ONLY once and you win!\n          </p>\n        </header>\n        <Score total={this.state.score}\n               goal={8}\n               status={this.state.status}\n               />\n        <Wrapper>\n          {this.state.cats.map(kitty => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={kitty.id}\n              key={kitty.id}\n              image={kitty.image}\n            />\n          ))}\n        </Wrapper>\n        <footer>\n          <p> © Rayna McGinnis |<a href=\"https://raynamcginnis.github.io/Clicky-Game/\" target=\"_blank\" rel=\"noopener noreferrer\"> View on Github</a>.</p>\n        </footer>\n    </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}